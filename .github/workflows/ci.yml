name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.3
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      shell: bash
      run: |
        poetry install --with dev

    - name: Lint with ruff
      shell: bash
      run: |
        poetry run ruff check src tests

    - name: Type check with pyright
      shell: bash
      run: |
        poetry run pyright

    - name: Test with pytest
      shell: bash
      run: |
        poetry run pytest tests -v --cov=mocksmith --cov-report=xml --cov-report=html --cov-report=term --cov-fail-under=59

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  test-pydantic:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        pydantic-version: ["pydantic>=2.0,<3.0"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.3
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies with Pydantic
      shell: bash
      run: |
        poetry install --with dev --extras pydantic
        poetry add "${{ matrix.pydantic-version }}"

    - name: Test Pydantic integration
      shell: bash
      run: |
        poetry run pytest tests/test_pydantic_integration.py -v --no-cov
