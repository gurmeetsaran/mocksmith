name: Release Testing

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-all-platforms:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Skip some combinations to save CI time
          - os: windows-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.9"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.3
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      shell: bash
      run: |
        poetry install --with dev --extras pydantic

    - name: Lint with ruff
      shell: bash
      run: |
        poetry run ruff check src tests

    - name: Type check with pyright
      shell: bash
      run: |
        poetry run pyright

    - name: Run tests
      shell: bash
      run: |
        poetry run pytest tests -v --cov=mocksmith --cov-report=xml --cov-report=html --cov-report=term --cov-fail-under=59

    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          .coverage
          htmlcov/
          coverage.xml
